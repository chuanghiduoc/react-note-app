{"ast":null,"code":"var _jsxFileName = \"/Users/levanbaotrong/react-note-app/client/src/components/NoteList.js\",\n  _s = $RefreshSig$();\n// import React from 'react';\n// import { List, Button } from 'antd';\n\n// function NoteList({ notes, handleDeleteNote }) {\n//   return (\n//     <List\n//       dataSource={notes}\n//       renderItem={(note) => (\n//         <List.Item\n//           actions={[\n//             <Button type=\"link\" danger onClick={() => handleDeleteNote(note._id)}>\n//               Xoá\n//             </Button>,\n//           ]}\n//         >\n//           {note.text}\n//         </List.Item>\n//       )}\n//     />\n//   );\n// }\n\n// export default NoteList;\n\n// NoteList.js (React component)\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst NoteList = ({\n  userId\n}) => {\n  _s();\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n  useEffect(() => {\n    // Gửi yêu cầu GET để lấy danh sách các ghi chú của người dùng\n    axios.get(`http://localhost:3001/api/notes/${userId}`).then(response => {\n      setNotes(response.data);\n    }).catch(error => {\n      console.error('Failed to fetch notes', error);\n    });\n  }, [userId]);\n  const handleDeleteNote = noteId => {\n    // Gửi yêu cầu DELETE để xoá ghi chú\n    axios.delete(`http://localhost:3001/api/notes/${userId}/${noteId}`).then(() => {\n      // Cập nhật danh sách ghi chú sau khi xoá\n      setNotes(prevNotes => prevNotes.filter(note => note._id !== noteId));\n    }).catch(error => {\n      console.error('Failed to delete note', error);\n    });\n  };\n  const handleAddNote = () => {\n    // Gửi yêu cầu POST để thêm ghi chú mới\n    axios.post(`http://localhost:3001/api/notes`, {\n      userId,\n      content: newNote\n    }).then(response => {\n      // Cập nhật danh sách ghi chú sau khi thêm ghi chú mới\n      setNotes(prevNotes => [...prevNotes, response.data]);\n      // Xóa nội dung ghi chú trong form\n      setNewNote('');\n    }).catch(error => {\n      console.error('Failed to add note', error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Danh s\\xE1ch ghi ch\\xFA\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Nh\\u1EADp ghi ch\\xFA m\\u1EDBi\",\n        value: newNote,\n        onChange: e => setNewNote(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: handleAddNote,\n        children: \"Th\\xEAm Ghi Ch\\xFA\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      children: notes.map(note => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [note.content, ' ', /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleDeleteNote(note._id),\n          children: \"Xo\\xE1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 13\n        }, this)]\n      }, note._id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n};\n_s(NoteList, \"7d63h4D9Z9E2lz7Z7iuTh8qNBKM=\");\n_c = NoteList;\nexport default NoteList;\nvar _c;\n$RefreshReg$(_c, \"NoteList\");","map":{"version":3,"names":["React","useState","useEffect","axios","jwt_decode","jsxDEV","_jsxDEV","NoteList","userId","_s","notes","setNotes","newNote","setNewNote","get","then","response","data","catch","error","console","handleDeleteNote","noteId","delete","prevNotes","filter","note","_id","handleAddNote","post","content","children","fileName","_jsxFileName","lineNumber","columnNumber","type","placeholder","value","onChange","e","target","onClick","map","_c","$RefreshReg$"],"sources":["/Users/levanbaotrong/react-note-app/client/src/components/NoteList.js"],"sourcesContent":["// import React from 'react';\n// import { List, Button } from 'antd';\n\n// function NoteList({ notes, handleDeleteNote }) {\n//   return (\n//     <List\n//       dataSource={notes}\n//       renderItem={(note) => (\n//         <List.Item\n//           actions={[\n//             <Button type=\"link\" danger onClick={() => handleDeleteNote(note._id)}>\n//               Xoá\n//             </Button>,\n//           ]}\n//         >\n//           {note.text}\n//         </List.Item>\n//       )}\n//     />\n//   );\n// }\n\n// export default NoteList;\n\n// NoteList.js (React component)\n\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport jwt_decode from 'jwt-decode';\n\nconst NoteList = ({ userId }) => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState('');\n\n  useEffect(() => {\n    // Gửi yêu cầu GET để lấy danh sách các ghi chú của người dùng\n    axios.get(`http://localhost:3001/api/notes/${userId}`)\n      .then(response => {\n        setNotes(response.data);\n      })\n      .catch(error => {\n        console.error('Failed to fetch notes', error);\n      });\n  }, [userId]);\n\n  const handleDeleteNote = (noteId) => {\n    // Gửi yêu cầu DELETE để xoá ghi chú\n    axios.delete(`http://localhost:3001/api/notes/${userId}/${noteId}`)\n      .then(() => {\n        // Cập nhật danh sách ghi chú sau khi xoá\n        setNotes(prevNotes => prevNotes.filter(note => note._id !== noteId));\n      })\n      .catch(error => {\n        console.error('Failed to delete note', error);\n      });\n  };\n\n  const handleAddNote = () => {\n    // Gửi yêu cầu POST để thêm ghi chú mới\n    axios.post(`http://localhost:3001/api/notes`, { userId, content: newNote })\n      .then(response => {\n        // Cập nhật danh sách ghi chú sau khi thêm ghi chú mới\n        setNotes(prevNotes => [...prevNotes, response.data]);\n        // Xóa nội dung ghi chú trong form\n        setNewNote('');\n      })\n      .catch(error => {\n        console.error('Failed to add note', error);\n      });\n  };\n\n  return (\n    <div>\n      <h2>Danh sách ghi chú</h2>\n      <form>\n        <input\n          type=\"text\"\n          placeholder=\"Nhập ghi chú mới\"\n          value={newNote}\n          onChange={(e) => setNewNote(e.target.value)}\n        />\n        <button type=\"button\" onClick={handleAddNote}>Thêm Ghi Chú</button>\n      </form>\n      <ul>\n        {notes.map(note => (\n          <li key={note._id}>\n            {note.content}{' '}\n            <button onClick={() => handleDeleteNote(note._id)}>Xoá</button>\n          </li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default NoteList;\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}